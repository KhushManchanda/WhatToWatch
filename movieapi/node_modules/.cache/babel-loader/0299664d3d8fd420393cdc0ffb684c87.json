{"ast":null,"code":"var _jsxFileName = \"/Users/khushmanchanda/Desktop/movieapi/movieapi/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCard from \"./components/MovieCard\";\nimport Genre from \"./components/Genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [searchGenre, setSearchGenre] = useState(\"\");\n  const [searchGenretwo, setSearchGenretwo] = useState(\"\");\n\n  const fetchMovies = async searchKey => {\n    const type = searchKey ? \"search\" : \"discover\";\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: process.env.REACT_APP_MOVIE_API_KEY,\n        query: searchKey\n      }\n    });\n    setMovies(results);\n  };\n\n  const fetchMovieWithGenre = async (searchGenre, searchGenretwo) => {\n    const type = searchGenre ? \"discover\" : \"discover\";\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: process.env.REACT_APP_MOVIE_API_KEY,\n        with_genres: searchGenre + ',' + searchGenretwo\n      }\n    });\n    setMovies(results);\n  };\n\n  const fetchGenres = async () => {\n    const {\n      data: {\n        genres\n      }\n    } = await axios.get(`${API_URL}/genre/movie/list`, {\n      params: {\n        api_key: process.env.REACT_APP_MOVIE_API_KEY\n      }\n    });\n    setGenres(genres); // console.log(genres);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n    fetchGenres();\n  }, []);\n\n  const renderMovies = () => movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n    movie: movie\n  }, movie.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this));\n\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovieWithGenre(searchGenre, searchGenretwo);\n  };\n\n  function CreateGenre(props) {\n    return /*#__PURE__*/_jsxDEV(Genre, {\n      name: props.name,\n      id: props.id\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Movie Search App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSearchGenre(e.target.value),\n          name: \"firstGenre\",\n          children: genres.map(CreateGenre)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSearchGenretwo(e.target.value),\n          name: \"secondGenre\",\n          children: genres.map(CreateGenre)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: renderMovies()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"oD5Jowa7irXRik9xDEdtQ3OvLPk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","MovieCard","Genre","App","API_URL","movies","setMovies","genres","setGenres","searchGenre","setSearchGenre","searchGenretwo","setSearchGenretwo","fetchMovies","searchKey","type","data","results","get","params","api_key","process","env","REACT_APP_MOVIE_API_KEY","query","fetchMovieWithGenre","with_genres","fetchGenres","renderMovies","map","movie","id","searchMovies","e","preventDefault","CreateGenre","props","name","target","value"],"sources":["/Users/khushmanchanda/Desktop/movieapi/movieapi/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCard from \"./components/MovieCard\";\nimport Genre from \"./components/Genres\";\n\nfunction App() {\n\tconst API_URL = \"https://api.themoviedb.org/3\";\n\tconst [movies, setMovies] = useState([]);\n\tconst [genres, setGenres] = useState([]);\n\t\n\tconst [searchGenre, setSearchGenre] = useState(\"\");\n\tconst [searchGenretwo, setSearchGenretwo] = useState(\"\");\n\n\tconst fetchMovies = async (searchKey) => {\n\t\tconst type = searchKey ? \"search\" : \"discover\";\n\t\tconst {\n\t\t\tdata: { results },\n\t\t} = await axios.get(`${API_URL}/${type}/movie`, {\n\t\t\tparams: {\n\t\t\t\tapi_key: process.env.REACT_APP_MOVIE_API_KEY,\n\t\t\t\tquery: searchKey,\n\t\t\t},\n\t\t});\n\n\t\tsetMovies(results);\n\t};\n\n\tconst fetchMovieWithGenre = async (searchGenre, searchGenretwo) => {\n\t\tconst type = searchGenre ? \"discover\" : \"discover\";\n\t\tconst {\n\t\t\tdata: { results },\n\t\t} = await axios.get(`${API_URL}/${type}/movie`, {\n\t\t\tparams: {\n\t\t\t\tapi_key: process.env.REACT_APP_MOVIE_API_KEY,\n\t\t\t\twith_genres: searchGenre + ',' + searchGenretwo,\n\t\t\t},\n\t\t});\n\t\t\n\n\t\tsetMovies(results);\n\t};\n\n\tconst fetchGenres = async () => {\n\t\tconst {\n\t\t\tdata: { genres },\n\t\t} = await axios.get(`${API_URL}/genre/movie/list`, {\n\t\t\tparams: {\n\t\t\t\tapi_key: process.env.REACT_APP_MOVIE_API_KEY,\n\t\t\t},\n\t\t});\n\t\t\n\t\tsetGenres(genres);\n\t\t// console.log(genres);\n\t};\n\n\t\n\n\tuseEffect(() => {\n\t\tfetchMovies();\n\t\tfetchGenres();\n\t\t\n\n\t}, []);\n\n\tconst renderMovies = () =>\n\t\tmovies.map((movie) => <MovieCard key={movie.id} movie={movie} />);\n\t\n\n\tconst searchMovies = (e) => {\n\t\te.preventDefault();\n\t\tfetchMovieWithGenre(searchGenre, searchGenretwo);\n\t};\n\t\n\tfunction CreateGenre(props) {\n\t\treturn <Genre key={props.id} name={props.name} id={props.id} />;\n\t}\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1 className=\"title\">Movie Search App</h1>\n\t\t\t\t<form onSubmit={searchMovies}>\n\t\t\t\t\t{/* <input type=\"text\" onChange={(e) => setSearchGenre(e.target.value)} /> */}\n\t\t\t\t\t<select onChange={(e) => setSearchGenre(e.target.value)} name=\"firstGenre\">{genres.map(CreateGenre)}</select>\n\t\t\t\t\t<select onChange={(e) => setSearchGenretwo(e.target.value)} name=\"secondGenre\">{genres.map(CreateGenre)}</select>\n\t\t\t\t\t<button type=\"submit\">Search!</button>\n\t\t\t\t</form>\n\t\t\t</header>\n\n\t\t\t<div className=\"container\">{renderMovies()}</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}