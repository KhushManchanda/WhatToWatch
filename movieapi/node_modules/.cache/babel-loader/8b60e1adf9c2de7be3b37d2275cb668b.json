{"ast":null,"code":"var _jsxFileName = \"/Users/khushmanchanda/Desktop/movieapi/movieapi/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCard from \"./components/MovieCard\";\nimport Genre from \"./components/Genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]); // const [searchKey, setSearchKey] = useState(\"\");\n\n  const [searchGenre, setSearchGenre] = useState(\"\"); // const fetchMovies = async (searchKey) => {\n  // \tconst type = searchKey ? \"search\" : \"discover\";\n  // \tconst {\n  // \t\tdata: { results },\n  // \t} = await axios.get(`${API_URL}/${type}/movie`, {\n  // \t\tparams: {\n  // \t\t\tapi_key: process.env.REACT_APP_MOVIE_API_KEY,\n  // \t\t\tquery: searchKey,\n  // \t\t},\n  // \t});\n  // \tsetMovies(results);\n  // };\n\n  const fetchMovieWithGenre = async searchGenre => {\n    //const type = searchKey ? \"search\" : \"discover\";\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/discover/movie`, {\n      params: {\n        api_key: process.env.REACT_APP_MOVIE_API_KEY,\n        with_genres: searchGenre\n      }\n    });\n    setMovies(results);\n  };\n\n  const fetchGenres = async () => {\n    const {\n      data: {\n        genres\n      }\n    } = await axios.get(`${API_URL}/genre/movie/list`, {\n      params: {\n        api_key: process.env.REACT_APP_MOVIE_API_KEY\n      }\n    });\n    setGenres(genres); // console.log(genres);\n  };\n\n  useEffect(() => {\n    // fetchMovies();\n    fetchGenres();\n    fetchMovieWithGenre();\n  }, []); // const renderMovies = () =>\n  // \tmovies.map((movie) => <MovieCard key={movie.id} movie={movie} />);\n\n  const renderMovieWithGenre = () => {\n    movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this));\n  }; // const searchMovies = (e) => {\n  // \te.preventDefault();\n  // \tfetchMovies(searchKey);\n  // };\n\n\n  const searchMovieWithGenre = e => {\n    e.preventDefault();\n    fetchMovieWithGenre(searchGenre);\n  };\n\n  function CreateGenre(props) {\n    return /*#__PURE__*/_jsxDEV(Genre, {\n      name: props.name,\n      id: props.id\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Search App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchMovieWithGenre,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSearchGenre(e.target.value),\n          name: \"firstGenre\",\n          children: genres.map(CreateGenre)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: renderMovieWithGenre()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"7lbkt4tAvZFNbWxGLB1CczEYzVY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","MovieCard","Genre","App","API_URL","movies","setMovies","genres","setGenres","searchGenre","setSearchGenre","fetchMovieWithGenre","data","results","get","params","api_key","process","env","REACT_APP_MOVIE_API_KEY","with_genres","fetchGenres","renderMovieWithGenre","map","movie","id","searchMovieWithGenre","e","preventDefault","CreateGenre","props","name","target","value"],"sources":["/Users/khushmanchanda/Desktop/movieapi/movieapi/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCard from \"./components/MovieCard\";\nimport Genre from \"./components/Genres\";\n\nfunction App() {\n\tconst API_URL = \"https://api.themoviedb.org/3\";\n\tconst [movies, setMovies] = useState([]);\n\tconst [genres, setGenres] = useState([]);\n\t// const [searchKey, setSearchKey] = useState(\"\");\n\tconst [searchGenre, setSearchGenre] = useState(\"\");\n\n\t// const fetchMovies = async (searchKey) => {\n\t// \tconst type = searchKey ? \"search\" : \"discover\";\n\t// \tconst {\n\t// \t\tdata: { results },\n\t// \t} = await axios.get(`${API_URL}/${type}/movie`, {\n\t// \t\tparams: {\n\t// \t\t\tapi_key: process.env.REACT_APP_MOVIE_API_KEY,\n\t// \t\t\tquery: searchKey,\n\t// \t\t},\n\t// \t});\n\n\t// \tsetMovies(results);\n\t// };\n\n\tconst fetchMovieWithGenre = async (searchGenre) => {\n\t\t//const type = searchKey ? \"search\" : \"discover\";\n\t\tconst {\n\t\t\tdata: { results },\n\t\t} = await axios.get(`${API_URL}/discover/movie`, {\n\t\t\tparams: {\n\t\t\t\tapi_key: process.env.REACT_APP_MOVIE_API_KEY,\n\t\t\t\twith_genres: searchGenre,\n\t\t\t},\n\t\t});\n\n\t\tsetMovies(results);\n\t};\n\n\tconst fetchGenres = async () => {\n\t\tconst {\n\t\t\tdata: { genres },\n\t\t} = await axios.get(`${API_URL}/genre/movie/list`, {\n\t\t\tparams: {\n\t\t\t\tapi_key: process.env.REACT_APP_MOVIE_API_KEY,\n\t\t\t},\n\t\t});\n\t\t\n\t\tsetGenres(genres);\n\t\t// console.log(genres);\n\t};\n\n\t\n\n\tuseEffect(() => {\n\t\t// fetchMovies();\n\t\tfetchGenres();\n\t\tfetchMovieWithGenre();\n\n\t}, []);\n\n\t// const renderMovies = () =>\n\t// \tmovies.map((movie) => <MovieCard key={movie.id} movie={movie} />);\n\tconst renderMovieWithGenre = () => {\n\t\tmovies.map((movie) => <MovieCard key={movie.id} movie={movie} />);\n\t}\n\n\t// const searchMovies = (e) => {\n\t// \te.preventDefault();\n\t// \tfetchMovies(searchKey);\n\t// };\n\tconst searchMovieWithGenre = (e) => {\n\t\te.preventDefault();\n\t\tfetchMovieWithGenre(searchGenre);\n\t}\n\tfunction CreateGenre(props) {\n\t\treturn <Genre key={props.id} name={props.name} id={props.id} />;\n\t}\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1>Movie Search App</h1>\n\t\t\t\t<form onSubmit={searchMovieWithGenre}>\n\t\t\t\t\t{/* <input type=\"text\" onChange={(e) => setSearchGenre(e.target.value)} /> */}\n\t\t\t\t\t<select onChange={(e) => setSearchGenre(e.target.value)} name=\"firstGenre\">{genres.map(CreateGenre)}</select>\n\t\t\t\t\t<button type=\"submit\">Search!</button>\n\t\t\t\t</form>\n\t\t\t</header>\n\n\t\t\t<div className=\"container\">{renderMovieWithGenre()}</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}